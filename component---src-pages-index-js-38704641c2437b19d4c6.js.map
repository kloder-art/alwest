{"version":3,"sources":["webpack:///./src/components/films/Item.jsx","webpack:///./src/components/films/Films.jsx","webpack:///./src/pages/index.js"],"names":["StyledFilmItem","styled","div","FilmItem","id","title","poster","to","src","withPrefix","childImageSharp","resize","alt","sizes","small","normal","StyledFilms","props","size","Films","items","map","x","Item","frontmatter","key","defaultProps","IndexPage","data","allFile","edges","node","childMarkdownRemark","query"],"mappings":"sJAKMA,EAAiBC,IAAOC,IAAV,2EAAGD,CAAH,8IA8BLE,EAjBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAd,OACf,kBAACN,EAAD,KACE,kBAAC,OAAD,CAAMO,GAAE,SAAWH,GACjB,yBACEI,IAAKC,qBAAWH,EAAOI,gBAAgBC,OAAOH,KAC9CI,IAAG,IAAMP,EAAN,gBCjBLQ,EAAQ,CACZC,MAAO,QACPC,OAAQ,SAGJC,EAAcf,IAAOC,IAAV,qEAAGD,CAAH,oLAIJ,SAAAgB,GAAK,OAAIJ,EAAMI,EAAMC,SAS5BC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOF,EAAV,EAAUA,KAAV,OACZ,kBAACF,EAAD,CAAaE,KAAMA,GAChBE,EAAMC,KAAI,SAAAC,GAAC,OACV,kBAACC,EAAD,iBAAUD,EAAEE,YAAZ,CAAyBC,IAAKH,EAAEE,YAAYpB,WAUlDe,EAAMO,aAAe,CACnBR,KAAM,UAGOC,O,kCCzCf,sHAsBeQ,UAbG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKvB,MAAM,SACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOe,MAAOQ,EAAKC,QAAQC,MAAMT,KAAI,SAAAC,GAAC,OAAIA,EAAES,KAAKC,4BAWhD,IAAMC,EAAK","file":"component---src-pages-index-js-38704641c2437b19d4c6.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link, withPrefix } from 'gatsby';\n\nconst StyledFilmItem = styled.div`\n  img {\n    max-height: 320px;\n    box-shadow: 0px 0px 1px grey;\n    transition: 0.2s all;\n\n    &:hover {\n      box-shadow: 0px 0px 10px black;\n      transform: scale(1.02, 1.02);\n    }\n  }\n`;\n\nconst FilmItem = ({ id, title, poster }) => (\n  <StyledFilmItem>\n    <Link to={`/film/${id}`}>\n      <img\n        src={withPrefix(poster.childImageSharp.resize.src)}\n        alt={`\"${title}\" Poster`}\n      />\n    </Link>\n  </StyledFilmItem>\n);\n\nFilmItem.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  poster: PropTypes.object,\n};\n\nexport default FilmItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst sizes = {\n  small: '100px',\n  normal: '150px',\n};\n\nconst StyledFilms = styled.div`\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fill,\n    minmax(${props => sizes[props.size]}, 1fr)\n  );\n  grid-gap: 1rem;\n  justify-items: center;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nconst Films = ({ items, size }) => (\n  <StyledFilms size={size}>\n    {items.map(x => (\n      <Item {...x.frontmatter} key={x.frontmatter.id} />\n    ))}\n  </StyledFilms>\n);\n\nFilms.propTypes = {\n  items: PropTypes.array,\n  size: PropTypes.oneOf(['small', 'normal']),\n};\n\nFilms.defaultProps = {\n  size: 'normal',\n};\n\nexport default Films;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Films from '../components/films/Films';\nimport Container from '../components/Container';\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <Container>\n      <Films items={data.allFile.edges.map(x => x.node.childMarkdownRemark)} />\n    </Container>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: { sourceInstanceName: { eq: \"film\" }, extension: { eq: \"md\" } }\n      sort: { fields: childMarkdownRemark___frontmatter___year, order: DESC }\n    ) {\n      edges {\n        node {\n          childMarkdownRemark {\n            frontmatter {\n              id\n              title\n              poster {\n                childImageSharp {\n                  resize(width: 250, height: 400, fit: COVER, quality: 50) {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}