{"version":3,"sources":["webpack:///./src/pages/staff.js","webpack:///./src/components/staff/Item.jsx","webpack:///./src/components/staff/Staff.jsx"],"names":["IndexPage","data","title","items","allFile","edges","map","x","node","childMarkdownRemark","query","StyledItem","styled","div","Item","id","picture","name","to","src","withPrefix","childImageSharp","resize","alt","defaultProps","sizes","small","normal","StyledStaff","props","size","Staff","frontmatter","key"],"mappings":"2FAAA,sHAsBeA,UAbG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,MAAOF,EAAKG,QAAQC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,4BAWhD,IAAMC,EAAK,c,yGCnBZC,EAAaC,IAAOC,IAAV,mEAAGD,CAAH,mLAkBVE,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,KAAhB,OACX,kBAACN,EAAD,KACE,kBAAC,OAAD,CAAMO,GAAE,UAAYH,GAClB,yBACEI,IAAKC,qBAAWJ,EAAQK,gBAAgBC,OAAOH,KAC/CI,IAAG,IAAMN,EAAN,YAEL,2BAAIA,MAWVH,EAAKU,aAAe,CAClBP,KAAM,IAGOH,QCvCTW,EAAQ,CACZC,MAAO,QACPC,OAAQ,SAGJC,EAAchB,IAAOC,IAAV,qEAAGD,CAAH,oLAIJ,SAAAiB,GAAK,OAAIJ,EAAMI,EAAMC,SAS5BC,EAAQ,SAAC,GAAqB,IAAnB5B,EAAkB,EAAlBA,MAAO2B,EAAW,EAAXA,KACtB,OACE,kBAACF,EAAD,CAAaE,KAAMA,GAChB3B,EAAMG,KAAI,SAAAC,GAAC,OACV,kBAAC,EAAD,iBAAUA,EAAEyB,YAAZ,CAAyBC,IAAK1B,EAAEyB,YAAYjB,WAWpDgB,EAAMP,aAAe,CACnBM,KAAM,UAGOC","file":"component---src-pages-staff-js-ff28dfbf57e6bb92c783.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Staff from '../components/staff/Staff';\nimport Container from '../components/Container';\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <Container>\n      <Staff items={data.allFile.edges.map(x => x.node.childMarkdownRemark)} />\n    </Container>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: { sourceInstanceName: { eq: \"staff\" }, extension: { eq: \"md\" } }\n      sort: { fields: [childMarkdownRemark___frontmatter___name], order: ASC }\n    ) {\n      edges {\n        node {\n          childMarkdownRemark {\n            frontmatter {\n              id\n              name\n              picture {\n                childImageSharp {\n                  resize(width: 250, height: 320, fit: COVER) {\n                    src\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link, withPrefix } from 'gatsby';\n\nconst StyledItem = styled.div`\n  img {\n    max-height: 320px;\n    box-shadow: 0px 0px 1px grey;\n    transition: 0.2s all;\n    margin-bottom: 0;\n\n    &:hover {\n      box-shadow: 0px 0px 10px black;\n      transform: scale(1.02, 1.02);\n    }\n  }\n\n  p {\n    text-align: center;\n  }\n`;\n\nconst Item = ({ id, picture, name }) => (\n  <StyledItem>\n    <Link to={`/staff/${id}`}>\n      <img\n        src={withPrefix(picture.childImageSharp.resize.src)}\n        alt={`\"${name}\" Photo`}\n      />\n      <p>{name}</p>\n    </Link>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  picture: PropTypes.object,\n};\n\nItem.defaultProps = {\n  name: '',\n};\n\nexport default Item;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst sizes = {\n  small: '100px',\n  normal: '150px',\n};\n\nconst StyledStaff = styled.div`\n  display: grid;\n  grid-template-columns: repeat(\n    auto-fill,\n    minmax(${props => sizes[props.size]}, 1fr)\n  );\n  grid-gap: 1rem;\n  justify-items: center;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nconst Staff = ({ items, size }) => {\n  return (\n    <StyledStaff size={size}>\n      {items.map(x => (\n        <Item {...x.frontmatter} key={x.frontmatter.id} />\n      ))}\n    </StyledStaff>\n  );\n};\n\nStaff.propTypes = {\n  items: PropTypes.array,\n  size: PropTypes.oneOf(['small', 'normal']),\n};\n\nStaff.defaultProps = {\n  size: 'normal',\n};\n\nexport default Staff;\n"],"sourceRoot":""}