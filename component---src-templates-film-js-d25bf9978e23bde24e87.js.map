{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Meta.jsx","webpack://gatsby-starter-default/./src/components/staff/Item.jsx","webpack://gatsby-starter-default/./src/components/staff/Staff.jsx","webpack://gatsby-starter-default/./src/templates/film.js"],"names":["Item","children","Link","label","href","target","rel","items","key","fn","runtime","Math","floor","cmp","x","toLocaleString","StyledMeta","styled","frontmatter","filter","map","result","idx","StyledItem","id","picture","name","to","fixed","childImageSharp","objectFit","objectPosition","alt","defaultProps","StyledStaff","data","file","childMarkdownRemark","html","title","style","marginBottom","poster","dangerouslySetInnerHTML","__html","directors","length","size","actors","locations","markers"],"mappings":"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","file":"component---src-templates-film-js-d25bf9978e23bde24e87.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst formatRuntime = runtime =>\n  runtime > 60\n    ? `${Math.floor(runtime / 60)}h. ${runtime % 60}m.`\n    : `${runtime}m`;\n\nconst Item = ({ children }) => <li>{children}</li>;\n\nconst Link = ({ children, label }) => (\n  <a href={children} target={'_blank'} rel={'noopener noreferrer'}>\n    {label}\n  </a>\n);\n\nconst items = [\n  { key: 'year' },\n  { key: 'runtime', fn: formatRuntime },\n  { key: 'imdb', label: 'IMDB', cmp: Link },\n  { key: 'spotify', label: 'BSO', cmp: Link },\n  { key: 'wikipedia', label: 'Wikipedia', cmp: Link },\n  { key: 'recaudation', fn: x => x.toLocaleString() },\n  { key: 'born' },\n];\n\nconst StyledMeta = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  li {\n    margin-right: 0.5rem;\n  }\n`;\n\nconst Meta = ({ frontmatter }) => (\n  <StyledMeta>\n    {items\n      .filter(x => frontmatter[x.key])\n      .map(x => ({\n        ...x,\n        result: x.fn ? x.fn(frontmatter[x.key]) : frontmatter[x.key],\n      }))\n      .map((x, idx) => (\n        <Item key={idx}>\n          {x.cmp ? <x.cmp label={x.label}>{x.result}</x.cmp> : x.result}\n        </Item>\n      ))}\n  </StyledMeta>\n);\n\nMeta.propTypes = {\n  frontmatter: PropTypes.object,\n};\n\nLink.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n};\n\nItem.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Meta;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image/withIEPolyfill';\n\nconst StyledItem = styled.div`\n  border-radius: 0.5rem;\n  overflow: hidden;\n  height: 260px;\n  background-color: black;\n\n  p {\n    text-align: center;\n  }\n\n  a {\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nconst Item = ({ id, picture, name }) => (\n  <StyledItem>\n    <Link to={`/staff/${id}`}>\n      <Img\n        fixed={picture.childImageSharp.fixed}\n        objectFit={'cover'}\n        objectPosition={'50% 50%'}\n        alt={`\"${name}\" Photo`}\n      />\n      <p>{name}</p>\n    </Link>\n  </StyledItem>\n);\n\nItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  picture: PropTypes.object,\n};\n\nItem.defaultProps = {\n  name: '',\n};\n\nexport default Item;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledStaff = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  grid-gap: 1rem;\n  justify-items: center;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nconst Staff = ({ items }) => {\n  return (\n    <StyledStaff>\n      {items\n        .filter(x => !!x)\n        .map(x => (\n          <Item {...x.frontmatter} key={x.frontmatter.id} />\n        ))}\n    </StyledStaff>\n  );\n};\n\nStaff.propTypes = {\n  items: PropTypes.array,\n};\n\nexport default Staff;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image/withIEPolyfill';\n\nimport Layout from '../components/Layout';\nimport Map from '../components/locations/Map';\nimport Staff from '../components/staff/Staff';\nimport Meta from '../components/Meta';\nimport SEO from '../components/SEO';\nimport Container from '../components/Container';\n\nconst Film = ({ data }) => {\n  const { frontmatter, html } = data.file.childMarkdownRemark;\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <Container>\n        <h2 style={{ marginBottom: 0 }}>{frontmatter.title}</h2>\n        <Meta frontmatter={frontmatter} />\n\n        <Img\n          fixed={frontmatter.poster.childImageSharp.fixed}\n          objectFit={'cover'}\n          objectPosition={'50% 50%'}\n          alt={frontmatter.title}\n          style={{ marginBottom: '1rem' }}\n        />\n\n        <p dangerouslySetInnerHTML={{ __html: html }} />\n      </Container>\n\n      {frontmatter.directors && frontmatter.directors.length > 0 && (\n        <Container>\n          <h3>Directors</h3>\n          <Staff size={'small'} items={frontmatter.directors} />\n        </Container>\n      )}\n\n      {frontmatter.actors && frontmatter.actors.length > 0 && (\n        <Container>\n          <h3>Actors</h3>\n          <Staff size={'small'} items={frontmatter.actors} />\n        </Container>\n      )}\n\n      {frontmatter.locations && frontmatter.locations.length > 0 && (\n        <>\n          <Container>\n            <h3>Locations</h3>\n          </Container>\n          <Map markers={frontmatter.locations} />\n        </>\n      )}\n    </Layout>\n  );\n};\n\nFilm.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default Film;\n\nexport const query = graphql`\n  query($id: String!) {\n    file(childMarkdownRemark: { frontmatter: { id: { eq: $id } } }) {\n      childMarkdownRemark {\n        frontmatter {\n          id\n          title\n          imdb\n          spotify\n          runtime\n          year\n          poster {\n            childImageSharp {\n              fixed(width: 210, height: 320) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          locations {\n            frontmatter {\n              id\n              name\n              lat\n              lon\n            }\n            html\n          }\n          directors {\n            frontmatter {\n              id\n              name\n              picture {\n                childImageSharp {\n                  fixed(width: 150, height: 220) {\n                    ...GatsbyImageSharpFixed\n                  }\n                }\n              }\n            }\n          }\n          actors {\n            frontmatter {\n              id\n              name\n              picture {\n                childImageSharp {\n                  fixed(width: 150, height: 220) {\n                    ...GatsbyImageSharpFixed\n                  }\n                }\n              }\n            }\n          }\n        }\n        html\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}