{"version":3,"sources":["webpack:///./src/templates/Film.jsx","webpack:///./src/components/StaffItem.jsx","webpack:///./src/components/StaffShelf.jsx"],"names":["Film","detail","data","allFilmsJson","edges","node","title","year","src","require","slug","alt","style","maxHeight","dangerouslySetInnerHTML","__html","sinopsis","imdb","href","target","spotify","recaudation","duration","direction","color","locations","length","markers","staff","map","x","key","query","StyledStaffItem","styled","div","StaffItem","props","imgSrc","to","defaultProps","StyledStaffShelf","StaffShelf","children"],"mappings":"2NAgFeA,UAvEF,SAAC,GAAc,IACpBC,EADmB,EAAXC,KACMC,aAAaC,MAAM,GAAGC,KAC1C,OACE,kBAAC,IAAD,KACE,4BAAKJ,EAAOK,OACZ,2BAAIL,EAAOM,MACX,yBACEC,IAAKC,UAAQ,KAAiBR,EAAOS,KAAzB,QACZC,IAAKV,EAAOK,MACZM,MAAO,CAAEC,UAAW,WAGtB,uBAAGC,wBAAyB,CAAEC,OAAQd,EAAOe,YAE7C,4BACGf,EAAOgB,MACN,4BACE,uBAAGC,KAAMjB,EAAOgB,KAAME,OAAQ,SAA9B,SAGHlB,EAAOmB,SACN,4BACE,uBAAGF,KAAMjB,EAAOmB,QAASD,OAAQ,SAAjC,iBAGHlB,EAAOoB,aACN,4BACE,gDADF,IACiCpB,EAAOoB,aAGzCpB,EAAOqB,UACN,4BACE,6CADF,IAC8BrB,EAAOqB,SADrC,OAIDrB,EAAOsB,WACN,4BACE,8CADF,IAC+BtB,EAAOsB,UAAU,6BAC9C,0BAAMX,MAAO,CAACY,MAAO,QAArB,2DAOJvB,EAAOwB,WAAaxB,EAAOwB,UAAUC,OAAS,GAC9C,oCACE,yCACA,kBAAC,IAAD,CAAcC,QAAS1B,EAAOwB,aAIhCxB,EAAO2B,OAAS3B,EAAO2B,MAAMF,OAAS,GACtC,oCACE,qCACA,kBAAC,IAAD,KACGzB,EAAO2B,MAAMC,KAAI,SAAAC,GAAC,OACjB,kBAAC,IAAD,iBAAeA,EAAf,CAAkBC,IAAKD,EAAEpB,eAgBhC,IAAMsB,EAAK,c,kCCjFlB,iDAIMC,EAAkBC,IAAOC,IAAV,iFAAGD,CAAH,kLAmBfE,EAAY,SAACC,GACjB,IAAMC,EAAS7B,UAAQ,KAAiB4B,EAAM3B,KAAxB,QACtB,OACE,kBAACuB,EAAD,KACE,kBAAC,OAAD,CAAMM,GAAE,UAAYF,EAAM3B,MACxB,yBAAKF,IAAK8B,EAAQ3B,IAAG,IAAM0B,EAAM/B,MAAZ,YACrB,2BAAI+B,EAAM/B,UAWlB8B,EAAUI,aAAe,CACvBlC,MAAO,IAGM8B,O,kCC5Cf,yBAGMK,EAHN,UAGyBP,EAAOC,IAAV,kFAAGD,CAAH,uMA6BPQ,IAZI,SAACL,GAClB,OACE,kBAACI,EAAD,KACGJ,EAAMM","file":"component---src-templates-film-jsx-9164d26c982175ba9e63.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport LocationsMap from '../components/LocationsMap';\nimport StaffShelf from '../components/StaffShelf';\nimport StaffItem from '../components/StaffItem';\n\nconst Film = ({ data }) => {\n  const detail = data.allFilmsJson.edges[0].node;\n  return (\n    <Layout>\n      <h2>{detail.title}</h2>\n      <p>{detail.year}</p>\n      <img\n        src={require(`../data/films/${detail.slug}.jpg`)}\n        alt={detail.title}\n        style={{ maxHeight: '320px' }}\n      />\n      \n      <p dangerouslySetInnerHTML={{ __html: detail.sinopsis }} />\n\n      <ul>\n        {detail.imdb && (\n          <li>\n            <a href={detail.imdb} target={'blank'}>IMDB</a>\n          </li>\n        )}\n        {detail.spotify && (\n          <li>\n            <a href={detail.spotify} target={'blank'}>Spotify: BSO</a>\n          </li>\n        )}\n        {detail.recaudation && (\n          <li>\n            <strong>Recaudation:</strong> {detail.recaudation}\n          </li>\n        )}\n        {detail.duration && (\n          <li>\n            <strong>Duration:</strong> {detail.duration} m.\n          </li>\n        )}\n        {detail.direction && (\n          <li>\n            <strong>Direction:</strong> {detail.direction}<br />\n            <span style={{color: 'red'}}>\n              (TODO: Move to staff as stuff or something like this)\n            </span>\n          </li>\n        )}\n      </ul>\n\n      {(detail.locations && detail.locations.length > 0) && (\n        <>\n          <h3>Locations</h3>\n          <LocationsMap markers={detail.locations} />\n        </>\n      )}\n\n      {(detail.staff && detail.staff.length > 0) && (\n        <>\n          <h3>Staff</h3>\n          <StaffShelf>\n            {detail.staff.map(x => (\n              <StaffItem {...x} key={x.slug} />\n            ))}\n          </StaffShelf>\n        </>\n      )}\n\n    </Layout>\n  );\n};\n\nFilm.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default Film;\n\nexport const query = graphql`\n  query($slug: String!) {\n    allFilmsJson(filter: { slug: { eq: $slug } } ) {\n      edges {\n        node {\n          id\n          slug\n          title\n          imdb\n          spotify\n          sinopsis\n          recaudation\n          duration\n          direction\n          year\n          locations {\n            id\n            slug\n            title\n            lat\n            lon\n            description\n          }\n          staff {\n            id\n            slug\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst StyledStaffItem = styled.div`\n  img {\n    max-height: 320px;\n    box-shadow: 0px 0px 1px grey;\n    transition: .2s all;\n    margin-bottom: 0;\n\n    &:hover {\n      box-shadow: 0px 0px 10px black;\n      transform: scale(1.02, 1.02);\n    }\n  }\n\n  p {\n    text-align: center;\n  }\n\n`;\n\nconst StaffItem = (props) => {\n  const imgSrc = require(`../data/staff/${props.slug}.jpg`);\n  return (\n    <StyledStaffItem>\n      <Link to={`/staff/${props.slug}`}>\n        <img src={imgSrc} alt={`\"${props.title}\" Photo`} />\n        <p>{props.title}</p>\n      </Link>\n    </StyledStaffItem>\n  );\n};\n\nStaffItem.propTypes = {\n  title: PropTypes.string,\n  slug: PropTypes.string\n};\n\nStaffItem.defaultProps = {\n  title: '',\n};\n\nexport default StaffItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst StyledStaffShelf = styled.div`\n  &{\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 16px 16px;\n    justify-items: center;\n    align-items: center;\n  }\n\n  @media (max-width: 480px) {\n    &{\n      grid-template-columns: repeat(2, 1fr);\n      grid-gap: 8px 8px;\n    }\n  }\n`;\n\nconst StaffShelf = (props) => {\n  return (\n    <StyledStaffShelf>\n      {props.children}\n    </StyledStaffShelf>\n  );\n};\n\nStaffShelf.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default StaffShelf;\n"],"sourceRoot":""}