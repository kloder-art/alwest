{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Meta.jsx","webpack://gatsby-starter-default/./src/components/films/Item.jsx","webpack://gatsby-starter-default/./src/components/films/Films.jsx","webpack://gatsby-starter-default/./src/templates/staff.js"],"names":["Item","children","Link","label","href","target","rel","items","key","fn","runtime","Math","floor","cmp","x","toLocaleString","StyledMeta","styled","frontmatter","filter","map","result","idx","StyledFilmItem","id","title","poster","to","fixed","childImageSharp","objectFit","objectPosition","alt","StyledFilms","data","file","childMarkdownRemark","html","name","style","marginBottom","picture","dangerouslySetInnerHTML","__html","director","length","size","actor","locations","markers"],"mappings":"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","file":"component---src-templates-staff-js-9877295a26552c8538b4.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst formatRuntime = runtime =>\n  runtime > 60\n    ? `${Math.floor(runtime / 60)}h. ${runtime % 60}m.`\n    : `${runtime}m`;\n\nconst Item = ({ children }) => <li>{children}</li>;\n\nconst Link = ({ children, label }) => (\n  <a href={children} target={'_blank'} rel={'noopener noreferrer'}>\n    {label}\n  </a>\n);\n\nconst items = [\n  { key: 'year' },\n  { key: 'runtime', fn: formatRuntime },\n  { key: 'imdb', label: 'IMDB', cmp: Link },\n  { key: 'spotify', label: 'BSO', cmp: Link },\n  { key: 'wikipedia', label: 'Wikipedia', cmp: Link },\n  { key: 'recaudation', fn: x => x.toLocaleString() },\n  { key: 'born' },\n];\n\nconst StyledMeta = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  li {\n    margin-right: 0.5rem;\n  }\n`;\n\nconst Meta = ({ frontmatter }) => (\n  <StyledMeta>\n    {items\n      .filter(x => frontmatter[x.key])\n      .map(x => ({\n        ...x,\n        result: x.fn ? x.fn(frontmatter[x.key]) : frontmatter[x.key],\n      }))\n      .map((x, idx) => (\n        <Item key={idx}>\n          {x.cmp ? <x.cmp label={x.label}>{x.result}</x.cmp> : x.result}\n        </Item>\n      ))}\n  </StyledMeta>\n);\n\nMeta.propTypes = {\n  frontmatter: PropTypes.object,\n};\n\nLink.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n};\n\nItem.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Meta;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image/withIEPolyfill';\n\nconst StyledFilmItem = styled.div`\n  border-radius: 0.5rem;\n  overflow: hidden;\n  height: 230px;\n`;\n\nconst FilmItem = ({ id, title, poster }) => (\n  <StyledFilmItem>\n    <Link to={`/film/${id}`}>\n      <Img\n        fixed={poster.childImageSharp.fixed}\n        objectFit={'cover'}\n        objectPosition={'50% 50%'}\n        alt={`\"${title}\" Poster`}\n      />\n    </Link>\n  </StyledFilmItem>\n);\n\nFilmItem.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  poster: PropTypes.object,\n};\n\nexport default FilmItem;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport Item from './Item';\n\nconst StyledFilms = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  grid-gap: 1rem;\n  justify-items: center;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n`;\n\nconst Films = ({ items }) => (\n  <StyledFilms>\n    {items\n      .filter(x => !!x)\n      .map(x => (\n        <Item {...x.frontmatter} key={x.frontmatter.id} />\n      ))}\n  </StyledFilms>\n);\n\nFilms.propTypes = {\n  items: PropTypes.array,\n};\n\nexport default Films;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image/withIEPolyfill';\n\nimport Layout from '../components/Layout';\nimport Films from '../components/films/Films';\nimport Map from '../components/locations/Map';\nimport SEO from '../components/SEO';\nimport Meta from '../components/Meta';\nimport Container from '../components/Container';\n\nconst Staff = ({ data }) => {\n  const { frontmatter, html } = data.file.childMarkdownRemark;\n  return (\n    <Layout>\n      <SEO title={frontmatter.name} />\n      <Container>\n        <h2 style={{ marginBottom: 0 }}>{frontmatter.name}</h2>\n        <Meta frontmatter={frontmatter} />\n\n        <Img\n          fixed={frontmatter.picture.childImageSharp.fixed}\n          objectFit={'cover'}\n          objectPosition={'50% 50%'}\n          alt={frontmatter.name}\n          style={{ marginBottom: '1rem' }}\n        />\n\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </Container>\n\n      {frontmatter.director && frontmatter.director.length > 0 && (\n        <Container>\n          <h3>Director in</h3>\n          <Films size={'small'} items={frontmatter.director} />\n        </Container>\n      )}\n\n      {frontmatter.actor && frontmatter.actor.length > 0 && (\n        <Container>\n          <h3>Actor in</h3>\n          <Films size={'small'} items={frontmatter.actor} />\n        </Container>\n      )}\n\n      {frontmatter.locations && frontmatter.locations.length > 0 && (\n        <>\n          <Container>\n            <h3>Locations</h3>\n          </Container>\n          <Map markers={frontmatter.locations} />\n        </>\n      )}\n    </Layout>\n  );\n};\n\nStaff.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default Staff;\n\nexport const query = graphql`\n  query($id: String!) {\n    file(childMarkdownRemark: { frontmatter: { id: { eq: $id } } }) {\n      childMarkdownRemark {\n        frontmatter {\n          id\n          name\n          born\n          imdb\n          picture {\n            childImageSharp {\n              fixed(width: 210, height: 320) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          director {\n            frontmatter {\n              id\n              title\n              poster {\n                childImageSharp {\n                  fixed(width: 150, height: 230) {\n                    ...GatsbyImageSharpFixed\n                  }\n                }\n              }\n            }\n          }\n          actor {\n            frontmatter {\n              id\n              title\n              poster {\n                childImageSharp {\n                  fixed(width: 150, height: 230) {\n                    ...GatsbyImageSharpFixed\n                  }\n                }\n              }\n            }\n          }\n          locations {\n            frontmatter {\n              id\n              name\n              lat\n              lon\n            }\n            html\n          }\n        }\n        html\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}